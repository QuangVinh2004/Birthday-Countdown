import { Share } from '@capacitor/share';
import { LocalNotifications } from '@capacitor/local-notifications';
import { Device } from '@capacitor/device';

// L·∫•y th√¥ng tin pin
async function getBatteryStatus() {
    try {
        const batteryInfo = await Device.getBatteryInfo();
        if (batteryInfo.batteryLevel !== undefined) {
            document.getElementById("battery").innerText = `üîã Pin c√≤n: ${batteryInfo.batteryLevel * 100}%`;
        } else {
            document.getElementById("battery").innerText = "Kh√¥ng th·ªÉ l·∫•y th√¥ng tin pin!";
        }
    } catch (error) {
        console.error("L·ªói l·∫•y pin:", error);
        document.getElementById("battery").innerText = "Kh√¥ng th·ªÉ l·∫•y th√¥ng tin pin!";
    }
}

// G·ªçi h√†m l·∫•y pin khi trang t·∫£i
document.addEventListener("DOMContentLoaded", () => {
    getBatteryStatus();
    requestNotificationPermission();
});

// Y√™u c·∫ßu quy·ªÅn th√¥ng b√°o
async function requestNotificationPermission() {
    const permission = await LocalNotifications.requestPermissions();
    console.log("Notification Permission:", permission);
}

// X·ª≠ l√Ω s·ª± ki·ªán khi nh·∫•n "T√≠nh to√°n"
document.getElementById("calculate").addEventListener("click", async () => {
    const input = document.getElementById("birthdate").value.trim();
    const regex = /^(\d{1,2})\/(\d{1,2})$/; 

    const match = input.match(regex);
    if (!match) {
        alert("Vui l√≤ng nh·∫≠p ƒë√∫ng ƒë·ªãnh d·∫°ng dd/mm (v√≠ d·ª•: 28/03)!");
        return;
    }

    const day = parseInt(match[1], 10);
    const month = parseInt(match[2], 10);

    if (day < 1 || day > 31 || month < 1 || month > 12) {
        alert("Ng√†y ho·∫∑c th√°ng kh√¥ng h·ª£p l·ªá!");
        return;
    }

    const today = new Date();
    let nextBirthday = new Date(today.getFullYear(), month - 1, day);

    if (nextBirthday < today) {
        nextBirthday.setFullYear(today.getFullYear() + 1);
    }

    const daysLeft = Math.ceil((nextBirthday - today) / (1000 * 60 * 60 * 24));
    document.getElementById("result").innerText = `C√≤n ${daysLeft} ng√†y ƒë·∫øn sinh nh·∫≠t ti·∫øp theo!`;

    // G·ª≠i th√¥ng b√°o
    await sendNotification(daysLeft);
});

// Chia s·∫ª n·ªôi dung
document.getElementById("share").addEventListener("click", async () => {
    try {
        await Share.share({
            title: "ƒê·∫øm ng∆∞·ª£c sinh nh·∫≠t",
            text: document.getElementById("result").innerText,
            url: window.location.href,
            dialogTitle: "Chia s·∫ª ng√†y sinh nh·∫≠t c·ªßa b·∫°n!",
        });
    } catch (error) {
        alert("Tr√¨nh duy·ªát kh√¥ng h·ªó tr·ª£ chia s·∫ª!");
    }
});

// G·ª≠i th√¥ng b√°o ƒë·∫øm ng∆∞·ª£c sinh nh·∫≠t
async function sendNotification(daysLeft) {
    try {
        await LocalNotifications.schedule({
            notifications: [
                {
                    id: 1,
                    title: "ƒê·∫øm ng∆∞·ª£c sinh nh·∫≠t",
                    body: `C√≤n ${daysLeft} ng√†y ƒë·∫øn sinh nh·∫≠t ti·∫øp theo! üéÇ`,
                    schedule: { at: new Date(Date.now() + 5000) }, // Hi·ªÉn th·ªã th√¥ng b√°o sau 5 gi√¢y
                    sound: null,
                    attachments: null,
                    actionTypeId: "",
                    extra: null
                }
            ]
        });
    } catch (error) {
        console.error("L·ªói khi g·ª≠i th√¥ng b√°o:", error);
    }
}
